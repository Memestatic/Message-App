@model IEnumerable<ApplicationUser>

<div class="container">
    <div class="row">
        <!-- Friends List Column -->
        <div class="col-md-4">
            <h2>Friends List</h2>
            <div id="friends-list">
                @foreach (var friend in Model)
                {
                    <div class="card mb-2">
                        <div class="card-body">
                            <h5 class="card-title">@friend.UserName</h5>
                            <button class="btn btn-primary open-chat" data-friend-id="@friend.Id">Open Chat</button>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Chat Conversation Column -->
        <div class="col-md-8">
            <h2>Chat Conversation</h2>
            <div id="chat-container" class="border rounded p-2" style="max-height: 600px; overflow-y: auto;">
                <!-- Chat messages will be loaded here -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.7/signalr.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.open-chat').click(function () {
                var friendId = $(this).data('friend-id');
                $.ajax({
                    url: '@Url.Action("ChatWindow", "Chat")',
                    data: { friendId: friendId },
                    type: 'GET',
                    success: function (result) {
                        $('#chat-container').html(result);

                        setTimeout(function() {
                            var $chat = $('.chat-messages');
                            console.log($chat);
                            $chat.scrollTop($chat[0].scrollHeight);
                        }, 100);

                        // Inicjalizacja licznika znaków po załadowaniu chatu
                        $('#message').on('input', function () {
                            var maxLength = parseInt($(this).attr('maxlength'));
                            var remaining = maxLength - $(this).val().length;
                            var $charCount = $('#charCount');

                            $('#charCount').text(remaining);

                            $charCount.text(remaining + " characters left");

                            if (remaining === 0){
                                $charCount.css({
                                    "color": "red",
									"font-weight": "bold"
                                });
                            } else{
                                $charCount.css({
                                "color": "",
                                "font-weight": ""
                            });
                            }
                        });
                    },
                    error: function () {
                        alert('Error loading chat conversation.');
                    }
                });
            });
        });
    </script>
    <script>
        // Create a connection to the SignalR hub.
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .build();

        // Receive messages broadcast from the hub.
        connection.on("ReceiveMessage", function(user, message) {
            // Append the new message to the chat container.
            let chatContainer = document.getElementById("chat-container");
            let p = document.createElement("p");
            p.innerHTML = `<strong>${user}:</strong> ${message}`;
            chatContainer.appendChild(p);
        });

        // Start the connection.
        connection.start().catch(function(err) {
            return console.error(err.toString());
        });
    </script>
    <script>
        console.log("Script loaded")
        // Event delegation to handle dynamically loaded partial view content.
        $(document).on('click', '#sendMessageButton', function () {
            var chatWindow = $(this).closest('.chat-window');
            var friendId = chatWindow.data('friend-id');
            var messageContent = chatWindow.find('#message').val();
            console.log("Send button clicked", friendId, messageContent);
            $.ajax({
                url: '@Url.Action("SendMessage", "Chat")',
                type: 'POST',
                data: { friendId: friendId, messageContent: messageContent },
                success: function (result) {
                    if(result.success) {
                        // Reload the chat conversation to display the new message
                        $.ajax({
                            url: '@Url.Action("ChatWindow", "Chat")',
                            data: { friendId: friendId },
                            type: 'GET',
                            success: function (chatResult) {
                                $('#chat-container').html(chatResult);
                            },
                            error: function () {
                                alert('Error reloading chat conversation.');
                            }
                        });
                    }
                },
                error: function () {
                    alert('Error sending message.');
                }
            });
        });
    </script>


}
